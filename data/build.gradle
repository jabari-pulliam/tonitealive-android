apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

kapt {
    generateStubs true
}

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':domain')

    compile "org.jetbrains.kotlin:kotlin-stdlib:${rootProject.ext.kotlinVersion}"
    kapt "com.google.dagger:dagger-compiler:${rootProject.ext.daggerVersion}"
    compile "com.google.dagger:dagger:${rootProject.ext.daggerVersion}"
    compile "com.squareup.okhttp:okhttp:${rootProject.ext.okHttpVersion}"
    compile "com.google.code.gson:gson:${rootProject.ext.gsonVersion}"
    compile "io.reactivex:rxjava:${rootProject.ext.rxJavaVersion}"
    compile "io.reactivex:rxandroid:${rootProject.ext.rxAndroidVersion}"
    compile "io.reactivex:rxkotlin:${rootProject.ext.rxKotlinVersion}"
    compile "javax.annotation:jsr250-api:${rootProject.ext.javaxAnnotationVersion}"
    compile "javax.inject:javax.inject:${rootProject.ext.javaxInjectVersion}"
    compile "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofitVersion}"
    compile "com.fatboyindustrial.gson-jodatime-serialisers:gson-jodatime-serialisers:$rootProject.ext.gsonJodatimeVersion"
    compile "com.google.guava:guava:$rootProject.ext.guavaVersion"

    testCompile "junit:junit:${rootProject.ext.jUnitVersion}"
    testCompile "org.assertj:assertj-core:${rootProject.ext.assertJVersion}"
    testCompile "org.mockito:mockito-core:${rootProject.ext.mockitoVersion}"
    testCompile "org.robolectric:robolectric:${rootProject.ext.robolectricVersion}"
}
